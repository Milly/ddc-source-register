*ddc-source-register.txt*				register source plugin

Author: Milly (https://github.com/Milly)
License: MIT license
Last change: 22 Jul 2025

CONTENTS					*ddc-source-register-contents*

Introduction		|ddc-source-register-introduction|
Install			|ddc-source-register-install|
Examples		|ddc-source-register-examples|
Params			|ddc-source-register-params|
Item Attributes		|ddc-source-register-item-attributes|


==============================================================================
INTRODUCTION				    *ddc-source-register-introduction*

*ddc-source-register* is a |ddc| source plugin that collects text or words
from |registers|. |ddc-sources|

FEATURES

- Collects values from |registers|, or extracts |word| from register values.
- Supports pasting multiple lines and control codes.
- Works in command-line mode.
- Highlights control codes (requires a highlight-capable UI).


==============================================================================
INSTALL						 *ddc-source-register-install*

You need to install both "|denops|.vim" and "|ddc|.vim".

https://github.com/vim-denops/denops.vim
https://github.com/Shougo/ddc.vim

It is recommended to install "|ddc-ui-pum|" and "|pum|.vim" as options.

https://github.com/Shougo/ddc-ui-pum
https://github.com/Shougo/pum.vim


==============================================================================
EXAMPLES					*ddc-source-register-examples*
>
	call ddc#custom#patch_global('sources', ['register'])

	" Optional: Set parameters, see `:help ddc-source-register-params`.
	call ddc#custom#patch_global('sourceParms', #{
	      \ register: #{
	      \   registers: '0123456789"+*#:',
	      \   maxAbbrWidth: 100,
	      \   ctrlCharHlGroup: 'Comment'
	      \   extractWords: v:true,
	      \ }})

	" Optional: Set `ddc-source-option-mark` to indicate the source name.
	" Optional: Set `ddc-source-option-maxKeywordLength` to exclude too long text.
	call ddc#custom#patch_global('sourceOptions', #{
	      \ register: #{
	      \   mark: 'Reg',
	      \   maxKeywordLength: 100,
	      \ }})
<

==============================================================================
PARAMS						  *ddc-source-register-params*

					 *ddc-source-register-param-registers*
registers	(string)
		Register names to collect.
		Specify the name of the register to collect, such as "012ab#".
		If empty, all |registers| are collected.

		Default: ""

				      *ddc-source-register-param-maxAbbrWidth*
maxAbbrWidth	(number)
		Max width of the abbreviates column.
		Items that exceed this width will be truncated.
		If 0 is specified, be unlimited.

		Default: 0

				   *ddc-source-register-param-ctrlCharHlGroup*
ctrlCharHlGroup	(string)
		Highlight group name for unprintable chars. |highlight-group|
		If empty, highlight is disabled.

		Default: "SpecialKey"

				      *ddc-source-register-param-extractWords*
extractWords	(boolean)
		Whether to extract words from the register value.
		If true, each |word| in the register value will become an item.
		If false, the register value is treated as a single item.
		Note that words are extracted according to 'iskeyword' option.

		Default: false


==============================================================================
ITEM ATTRIBUTES				 *ddc-source-register-item-attributes*

				     *ddc-source-register-item-attribute-abbr*
abbr		(string)
		Human-readable register value.
		Control codes are replaced with "^X" and highlighted with
		|ddc-source-register-param-ctrlCharHlGroup|.
		It is truncated by |ddc-source-register-param-maxAbbrWidth|.

				     *ddc-source-register-item-attribute-info*
info		(string)
		Raw register value.
		Control codes are included verbatim and are not converted.

				     *ddc-source-register-item-attribute-kind*
kind		(string)
		Register type like |:registers|.
		Type can be one of:
		"c"	for |characterwise| text
		"l"	for |linewise| text
		"b"	for |blockwise-visual| text
		"w"	for |word| (see |ddc-source-register-param-extractWords|)
		""	otherwise

				     *ddc-source-register-item-attribute-menu*
menu		(string)
		Register name. |registers|

				     *ddc-source-register-item-attribute-word*
word		(string)
		The completion word of an item.  It is used for matching
		inputs.
		Control codes are replaced with "?" because |ddc|.vim does not
		support it.  |ddc-source-register| uses the info attribute to
		insert such characters when necessary.


==============================================================================
vim:tw=78:ts=8:ft=help:norl:noet:fen:noet:
